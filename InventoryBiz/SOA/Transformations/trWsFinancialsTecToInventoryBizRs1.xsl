<?xml version="1.0" encoding="UTF-8" ?>
<xsl:stylesheet version="1.0" xmlns:mhdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.mediator.service.common.functions.MediatorExtnFunction" xmlns:ns1="http://soa.estrellaroja.com.mx/InventoryBiz" xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20" xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions" xmlns:socket="http://www.oracle.com/XSL/Transform/java/oracle.tip.adapter.socket.ProtocolTranslator" xmlns:oracle-xsl-mapper="http://www.oracle.com/xsl/mapper/schemas" xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue" xmlns:oraxsl="http://www.oracle.com/XSL/Transform/java" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns0="http://soa.estrellaroja.com.mx/FinancialsTec" exclude-result-prefixes=" xsd oracle-xsl-mapper xsi xsl ns1 ns0 mhdr oraext xp20 xref socket dvm oraxsl"
                xmlns:ns2="http://soa.estrellaroja.com.mx/EstrellaRojaCommons"
                xmlns:ns3="http://soa.estrellaroja.com.mx/FinancialsTec/types"
                xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
                xmlns:ns4="http://soa.estrellaroja.com.mx/InventoryBiz/types">
   <oracle-xsl-mapper:schema>
      <!--SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY.-->
      <oracle-xsl-mapper:mapSources>
         <oracle-xsl-mapper:source type="WSDL">
            <oracle-xsl-mapper:schema location="../WSDLs/FinancialsTecWrapper.wsdl"/>
            <oracle-xsl-mapper:rootElement name="GetInventoryTransactionsRs" namespace="http://soa.estrellaroja.com.mx/FinancialsTec"/>
         </oracle-xsl-mapper:source>
         <oracle-xsl-mapper:source type="WSDL">
            <oracle-xsl-mapper:schema location="../WSDLs/bpelInventoryBiz.wsdl"/>
            <oracle-xsl-mapper:rootElement name="InventoryBizRs" namespace="http://soa.estrellaroja.com.mx/InventoryBiz"/>
            <oracle-xsl-mapper:param name="varOutputInventoryBizOutputVariable.InventoryBizRs"/>
         </oracle-xsl-mapper:source>
      </oracle-xsl-mapper:mapSources>
      <oracle-xsl-mapper:mapTargets>
         <oracle-xsl-mapper:target type="WSDL">
            <oracle-xsl-mapper:schema location="../WSDLs/bpelInventoryBiz.wsdl"/>
            <oracle-xsl-mapper:rootElement name="InventoryBizRs" namespace="http://soa.estrellaroja.com.mx/InventoryBiz"/>
         </oracle-xsl-mapper:target>
      </oracle-xsl-mapper:mapTargets>
      <!--GENERATED BY ORACLE XSL MAPPER 12.2.1.2.0(XSLT Build 161003.0739.0018) AT [WED JAN 03 17:50:21 CST 2018].-->
   </oracle-xsl-mapper:schema>
   <!--User Editing allowed BELOW this line - DO NOT DELETE THIS LINE-->
   <xsl:param name="varOutputInventoryBizOutputVariable.InventoryBizRs"/>
   <xsl:template match="/">
      <ns1:InventoryBizRs>
         <ns2:Success>
            <xsl:value-of select="$varOutputInventoryBizOutputVariable.InventoryBizRs/ns1:InventoryBizRs/ns2:Success"/>
         </ns2:Success>
         <ns2:Errors>
            <xsl:for-each select="/ns0:GetInventoryTransactionsRs/ns2:Errors/ns2:Error">
               <ns2:Error>
                  <xsl:if test="ns2:ErrorCode">
                     <ns2:ErrorCode>
                        <xsl:value-of select="ns2:ErrorCode"/>
                     </ns2:ErrorCode>
                  </xsl:if>
                  <xsl:if test="ns2:ShortDescription">
                     <ns2:ShortDescription>
                        <xsl:value-of select="ns2:ShortDescription"/>
                     </ns2:ShortDescription>
                  </xsl:if>
                  <xsl:if test="ns2:Description">
                     <ns2:Description>
                        <xsl:value-of select="ns2:Description"/>
                     </ns2:Description>
                  </xsl:if>
                  <xsl:if test="ns2:BusinessProcess">
                     <ns2:BusinessProcess>
                        <xsl:value-of select="ns2:BusinessProcess"/>
                     </ns2:BusinessProcess>
                  </xsl:if>
                  <xsl:if test="ns2:FailedService">
                     <ns2:FailedService>
                        <xsl:value-of select="ns2:FailedService"/>
                     </ns2:FailedService>
                  </xsl:if>
                  <xsl:if test="ns2:TimeStamp">
                     <ns2:TimeStamp>
                        <xsl:value-of select="ns2:TimeStamp"/>
                     </ns2:TimeStamp>
                  </xsl:if>
               </ns2:Error>
            </xsl:for-each>
         </ns2:Errors>
         <ns1:Return>
            <xsl:if test="$varOutputInventoryBizOutputVariable.InventoryBizRs/ns1:InventoryBizRs/ns1:Return/ns1:ContentBase64">
               <ns1:ContentBase64>
                  <xsl:value-of select="$varOutputInventoryBizOutputVariable.InventoryBizRs/ns1:InventoryBizRs/ns1:Return/ns1:ContentBase64"/>
               </ns1:ContentBase64>
            </xsl:if>
         </ns1:Return>
         <ns1:NumberTransactions>
            <xsl:value-of select="count (/ns0:GetInventoryTransactionsRs/ns0:Return/ns0:InventoryTransaction )"/>
         </ns1:NumberTransactions>
      </ns1:InventoryBizRs>
   </xsl:template>
</xsl:stylesheet>
