<?xml version = '1.0' encoding = 'UTF-8'?>
<xsl:stylesheet version="1.0" xmlns:mhdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.mediator.service.common.functions.MediatorExtnFunction" xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20" xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions" xmlns:socket="http://www.oracle.com/XSL/Transform/java/oracle.tip.adapter.socket.ProtocolTranslator" xmlns:oracle-xsl-mapper="http://www.oracle.com/xsl/mapper/schemas" xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue" xmlns:oraxsl="http://www.oracle.com/XSL/Transform/java" xmlns:ns0="http://soa.estrellaroja.com.mx/ERPIntegrationBiz" xmlns:ns1="http://soa.estrellaroja.com.mx/ERPIntegrationServiceTec" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" exclude-result-prefixes="xsd oracle-xsl-mapper xsi xsl ns0 ns1 mhdr oraext xp20 xref socket dvm oraxsl" xmlns:plnk="http://docs.oasis-open.org/wsbpel/2.0/plnktype" xmlns:ns3="http://soa.estrellaroja.com.mx/EstrellaRojaCommons" xmlns:ns4="http://soa.estrellaroja.com.mx/ERPIntegrationServiceTec/types" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns2="http://schemas.oracle.com/bpel/extension" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:client="http://soa.estrellaroja.com.mx/ERPIntegrationBiz/bpelImportToERPCloud" xmlns:ns5="http://soa.estrellaroja.com.mx/ERPIntegrationBiz/types" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
    <oracle-xsl-mapper:schema>
        <!--SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY.-->
        <oracle-xsl-mapper:mapSources>
            <oracle-xsl-mapper:source type="WSDL">
                <oracle-xsl-mapper:schema location="../../WSDLs/bpelImportToERPCloud.wsdl"/>
                <oracle-xsl-mapper:rootElement name="BRuleImportToERPCloudRs" namespace="http://soa.estrellaroja.com.mx/ERPIntegrationBiz"/>
            </oracle-xsl-mapper:source>
        </oracle-xsl-mapper:mapSources>
        <oracle-xsl-mapper:mapTargets>
            <oracle-xsl-mapper:target type="WSDL">
                <oracle-xsl-mapper:schema location="oramds:/apps/OSB/ERPIntegrationServiceTec/ERPIntegrationServiceTec.wsdl"/>
                <oracle-xsl-mapper:rootElement name="LoadInterfaceRq" namespace="http://soa.estrellaroja.com.mx/ERPIntegrationServiceTec"/>
            </oracle-xsl-mapper:target>
        </oracle-xsl-mapper:mapTargets>
        <!--GENERATED BY ORACLE XSL MAPPER 12.2.1.2.0(XSLT Build 161003.0739.0018) AT [WED JUL 12 11:57:37 CDT 2017].-->
    </oracle-xsl-mapper:schema>
    <!--User Editing allowed BELOW this line - DO NOT DELETE THIS LINE-->
    <xsl:template match="/">
        <ns1:LoadInterfaceRq>
            <ns1:JobPackageName>
                <xsl:value-of select="substring-before (/ns0:BRuleImportToERPCloudRs/ns0:JobPackageName, &quot;|&quot; )"/>
            </ns1:JobPackageName>
            <ns1:JobDefinitionName>
                <xsl:value-of select="substring-before (/ns0:BRuleImportToERPCloudRs/ns0:JobDefinitionName, &quot;|&quot; )"/>
            </ns1:JobDefinitionName>
            <xsl:call-template name="split-paramList">
                <xsl:with-param name="inParam" select="/ns0:BRuleImportToERPCloudRs/ns0:paramListInterface"/>
            </xsl:call-template>
        </ns1:LoadInterfaceRq>
    </xsl:template>
    <xsl:template name="split-paramList">
        <xsl:param name="inParam"/>
        <xsl:if test="$inParam != ''">
            <xsl:element name="ns1:paramList">
                <xsl:choose>
                    <xsl:when test="contains($inParam,'|')">
                        <xsl:value-of select="substring-before($inParam,'|')"/>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:value-of select="$inParam"/>
                    </xsl:otherwise>
                </xsl:choose>
            </xsl:element>
            <xsl:call-template name="split-paramList">
                <xsl:with-param name="inParam" select="substring-after($inParam,'|')"/>
            </xsl:call-template>
        </xsl:if>
    </xsl:template>
</xsl:stylesheet>