<?xml version = '1.0' encoding = 'UTF-8'?>
<xsl:stylesheet version="1.0" xmlns:mhdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.mediator.service.common.functions.MediatorExtnFunction" xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20" xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions" xmlns:tns="http://soa.estrellaroja.com.mx/CustomerBiz" xmlns:socket="http://www.oracle.com/XSL/Transform/java/oracle.tip.adapter.socket.ProtocolTranslator" xmlns:oracle-xsl-mapper="http://www.oracle.com/xsl/mapper/schemas" xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue" xmlns:ns1="http://soa.estrellaroja.com.mx/ERPIntegrationServiceTec" xmlns:oraxsl="http://www.oracle.com/XSL/Transform/java" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns0="http://soa.estrellaroja.com.mx/FinancialsTec" exclude-result-prefixes=" xsd oracle-xsl-mapper xsi xsl ns1 ns0 tns mhdr oraext xp20 xref socket dvm oraxsl" xmlns:plnk="http://docs.oasis-open.org/wsbpel/2.0/plnktype" xmlns:ns3="http://soa.estrellaroja.com.mx/EstrellaRojaCommons" xmlns:ns2="http://schemas.oracle.com/bpel/extension" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:client="http://soa.estrellaroja.com.mx/CustomerBiz/bpelSyncCustomers" xmlns:ns6="http://soa.estrellaroja.com.mx/AuditControlTec">
   <oracle-xsl-mapper:schema>
      <!--SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY.-->
      <oracle-xsl-mapper:mapSources>
         <oracle-xsl-mapper:source type="WSDL">
            <oracle-xsl-mapper:schema location="../../WSDLs/bpelSyncCustomers.wsdl"/>
            <oracle-xsl-mapper:rootElement name="GetCustomersRs" namespace="http://soa.estrellaroja.com.mx/FinancialsTec"/>
         </oracle-xsl-mapper:source>
         <oracle-xsl-mapper:source type="WSDL">
            <oracle-xsl-mapper:schema location="../../WSDLs/bpelSyncCustomers.wsdl"/>
            <oracle-xsl-mapper:rootElement name="FindPersonRs" namespace="http://soa.estrellaroja.com.mx/ERPIntegrationServiceTec"/>
            <oracle-xsl-mapper:param name="varFindPersonRs.FindPersonRsPart"/>
         </oracle-xsl-mapper:source>
         <oracle-xsl-mapper:source type="WSDL">
            <oracle-xsl-mapper:schema location="../../WSDLs/bpelSyncCustomers.wsdl"/>
            <oracle-xsl-mapper:rootElement name="FindOrganizationRs" namespace="http://soa.estrellaroja.com.mx/ERPIntegrationServiceTec"/>
            <oracle-xsl-mapper:param name="varFindOrganizationRs.FindOrganizationRsPart"/>
         </oracle-xsl-mapper:source>
      </oracle-xsl-mapper:mapSources>
      <oracle-xsl-mapper:mapTargets>
         <oracle-xsl-mapper:target type="WSDL">
            <oracle-xsl-mapper:schema location="../../WSDLs/bpelSyncCustomers.wsdl"/>
            <oracle-xsl-mapper:rootElement name="UpdateCustomerRq" namespace="http://soa.estrellaroja.com.mx/CustomerBiz"/>
         </oracle-xsl-mapper:target>
      </oracle-xsl-mapper:mapTargets>
      <!--GENERATED BY ORACLE XSL MAPPER 12.2.1.2.0(XSLT Build 161003.0739.0018) AT [FRI DEC 15 17:01:29 CST 2017].-->
   </oracle-xsl-mapper:schema>
   <!--User Editing allowed BELOW this line - DO NOT DELETE THIS LINE-->
   <xsl:param name="varFindPersonRs.FindPersonRsPart"/>
   <xsl:param name="varFindOrganizationRs.FindOrganizationRsPart"/>
   <xsl:template match="/">
      <tns:UpdateCustomerRq>
         <tns:CustomerData>
            <tns:CustomerId>
               <xsl:value-of select="/ns0:GetCustomersRs/ns0:Return/ns0:Customer/ns0:CustomerId"/>
            </tns:CustomerId>
            <tns:Name>
               <xsl:value-of select="/ns0:GetCustomersRs/ns0:Return/ns0:Customer/ns0:Name"/>
            </tns:Name>
            <xsl:if test="string-length (/ns0:GetCustomersRs/ns0:Return/ns0:Customer/ns0:LastName ) > 0">
               <tns:LastName>
                  <xsl:value-of select="/ns0:GetCustomersRs/ns0:Return/ns0:Customer/ns0:LastName"/>
               </tns:LastName>
            </xsl:if>
            <xsl:if test="string-length (/ns0:GetCustomersRs/ns0:Return/ns0:Customer/ns0:FiscalCode ) > 0">
               <tns:FiscalCode>
                  <xsl:value-of select="/ns0:GetCustomersRs/ns0:Return/ns0:Customer/ns0:FiscalCode"/>
               </tns:FiscalCode>
            </xsl:if>
            <xsl:if test="string-length (/ns0:GetCustomersRs/ns0:Return/ns0:Customer/ns0:DunsNumber ) > 0">
               <tns:DunsNumber>
                  <xsl:value-of select="/ns0:GetCustomersRs/ns0:Return/ns0:Customer/ns0:DunsNumber"/>
               </tns:DunsNumber>
            </xsl:if>
            <tns:AccountName>
               <xsl:value-of select="/ns0:GetCustomersRs/ns0:Return/ns0:Customer/ns0:AccountName"/>
            </tns:AccountName>
            <tns:CustomerType>
               <xsl:value-of select="/ns0:GetCustomersRs/ns0:Return/ns0:Customer/ns0:CustomerType"/>
            </tns:CustomerType>
            <xsl:if test="string-length (/ns0:GetCustomersRs/ns0:Return/ns0:Customer/ns0:AccountId ) > 0">
               <tns:AccountId>
                  <xsl:value-of select="/ns0:GetCustomersRs/ns0:Return/ns0:Customer/ns0:AccountId"/>
               </tns:AccountId>
            </xsl:if>
            <xsl:if test="string-length (/ns0:GetCustomersRs/ns0:Return/ns0:Customer/ns0:replicationInd ) > 0">
               <tns:replicationInd>
                  <xsl:value-of select="/ns0:GetCustomersRs/ns0:Return/ns0:Customer/ns0:replicationInd"/>
               </tns:replicationInd>
            </xsl:if>
            <xsl:if test="string-length (/ns0:GetCustomersRs/ns0:Return/ns0:Customer/ns0:replicationMsg ) > 0">
               <tns:replicationMsg>
                  <xsl:value-of select="/ns0:GetCustomersRs/ns0:Return/ns0:Customer/ns0:replicationMsg"/>
               </tns:replicationMsg>
            </xsl:if>
            <xsl:choose>
               <xsl:when test="count ($varFindPersonRs.FindPersonRsPart/ns1:FindPersonRs/ns1:Customer[1]/ns1:Person ) > 0">
                  <tns:PartyId>
                     <xsl:value-of select="$varFindPersonRs.FindPersonRsPart/ns1:FindPersonRs/ns1:Customer[1]/ns1:Person/ns1:PartyId"/>
                  </tns:PartyId>
                   <tns:ProfileId>
                     <xsl:value-of select="$varFindPersonRs.FindPersonRsPart/ns1:FindPersonRs/ns1:Customer[1]/ns1:Person/ns1:PersonProfileId"/>
                  </tns:ProfileId>
               </xsl:when>
               <xsl:when test="count ($varFindOrganizationRs.FindOrganizationRsPart/ns1:FindOrganizationRs/ns1:Customer[1.0]/ns1:Organization ) > 0">
                  <tns:PartyId>
                     <xsl:value-of select="$varFindOrganizationRs.FindOrganizationRsPart/ns1:FindOrganizationRs/ns1:Customer[1]/ns1:Organization/ns1:PartyId"/>
                  </tns:PartyId>
                  <tns:ProfileId>
                     <xsl:value-of select="$varFindOrganizationRs.FindOrganizationRsPart/ns1:FindOrganizationRs/ns1:Customer[1]/ns1:Organization/ns1:OrganizationProfileId"/>
                  </tns:ProfileId>
               </xsl:when>
            </xsl:choose>
         </tns:CustomerData>
      </tns:UpdateCustomerRq>
   </xsl:template>
</xsl:stylesheet>