<?xml version="1.0" encoding="UTF-8" ?>
<xsl:stylesheet version="1.0"
                xmlns:mhdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.mediator.service.common.functions.MediatorExtnFunction"
                xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
                xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
                xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
                xmlns:socket="http://www.oracle.com/XSL/Transform/java/oracle.tip.adapter.socket.ProtocolTranslator"
                xmlns:oracle-xsl-mapper="http://www.oracle.com/xsl/mapper/schemas"
                xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue"
                xmlns:oraxsl="http://www.oracle.com/XSL/Transform/java"
                xmlns:tns="http://soa.estrellaroja.com.mx/DigitalStampGERTec" xmlns:ext="http://exslt.org/common"
                xmlns:str="http://exslt.org/strings" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns0="http://soa.estrellaroja.com.mx/InvoicesBiz"
                exclude-result-prefixes="xsd oracle-xsl-mapper xsi xsl ns0 tns mhdr oraext xp20 xref socket dvm oraxsl"
                xmlns:plnk="http://docs.oasis-open.org/wsbpel/2.0/plnktype"
                xmlns:ns1="http://soa.estrellaroja.com.mx/EstrellaRojaCommons"
                xmlns:ns2="http://soa.estrellaroja.com.mx/SOAUtilitiesTec"
                xmlns:client="http://soa.estrellaroja.com.mx/InvoicesBiz/bpelDigitalStamp"
                xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
                xmlns:ns3="http://soa.estrellaroja.com.mx/ERPIntegrationServiceTec"
                xmlns:ns4="http://soa.estrellaroja.com.mx/cfd/3" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/"
                xmlns:ns6="http://soa.estrellaroja.com.mx/sitio_internet/cfd/tipoDatos/tdCFDI"
                xmlns:ns7="http://soa.estrellaroja.com.mx/TimbreFiscalDigital"
                xmlns:ns8="http://soa.estrellaroja.com.mx/DigitalStampGERTec"
                xmlns:ns9="http://soa.estrellaroja.com.mx/DigitalStampGERTec/types"
                xmlns:ns5="http://soa.estrellaroja.com.mx/InvoicesBiz/ERPIntegrationServiceTec"
                xmlns:ns10="http://soa.estrellaroja.com.mx/InvoicesBiz/StampInvoice">
  <oracle-xsl-mapper:schema>
    <!--SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY.-->
    <oracle-xsl-mapper:mapSources>
      <oracle-xsl-mapper:source type="WSDL">
        <oracle-xsl-mapper:schema location="../WSDLs/bpelDigitalStamp.wsdl"/>
        <oracle-xsl-mapper:rootElement name="DATA_DS" namespace="http://soa.estrellaroja.com.mx/InvoicesBiz"/>
      </oracle-xsl-mapper:source>
    </oracle-xsl-mapper:mapSources>
    <oracle-xsl-mapper:mapTargets>
      <oracle-xsl-mapper:target type="WSDL">
        <oracle-xsl-mapper:schema location="oramds:/apps/OSB/DigitalStampGERTec/DigitalStampGERTec.wsdl"/>
        <oracle-xsl-mapper:rootElement name="createTrxCFDIRq"
                                       namespace="http://soa.estrellaroja.com.mx/DigitalStampGERTec"/>
      </oracle-xsl-mapper:target>
    </oracle-xsl-mapper:mapTargets>
    <!--GENERATED BY ORACLE XSL MAPPER 12.2.1.2.0(XSLT Build 161003.0739.0018) AT [TUE JAN 30 15:37:29 CST 2018].-->
  </oracle-xsl-mapper:schema>
  <!--User Editing allowed BELOW this line - DO NOT DELETE THIS LINE-->
  <xsl:template match="/">
    <ns8:createTrxCFDIRq>
      <ns8:invoice>
        <ns8:transactionNumber>
          <xsl:value-of select='concat (dvm:lookupValue ("DVMs/dvmInvoicesBiz.dvm", "Code", "KEY_FROM", "Value", "", "Component", "DigitalStamp" ), dvm:lookupValue ("DVMs/dvmInvoicesBiz.dvm", "Code", "KEY_TYPE", "Value", "", "Component", "DigitalStamp" ), /ns0:DATA_DS/ns0:invoice/ns0:CUSTOMER_TRX_ID )'/>
        </ns8:transactionNumber>
        <ns8:idRfc>
          <xsl:value-of select="/ns0:DATA_DS/ns0:invoice/ns0:id_rfc"/>
        </ns8:idRfc>
        <ns8:certificateNumber>
          <xsl:value-of select="/ns0:DATA_DS/ns0:invoice/ns0:certificate_number"/>
        </ns8:certificateNumber>
        <ns8:issuerRfc>
          <xsl:value-of select="/ns0:DATA_DS/ns0:invoice/ns0:issuer_rfc"/>
        </ns8:issuerRfc>
        <ns8:issuerName>
          <xsl:value-of select="/ns0:DATA_DS/ns0:invoice/ns0:issuer_name"/>
        </ns8:issuerName>
        <ns8:issuerStreet>
          <xsl:value-of select="/ns0:DATA_DS/ns0:invoice/ns0:issuer_street"/>
        </ns8:issuerStreet>
        <ns8:issuerExtNumber>
          <xsl:value-of select="/ns0:DATA_DS/ns0:invoice/ns0:issuer_ext_number"/>
        </ns8:issuerExtNumber>
        <ns8:issuerIntNumber>
          <xsl:value-of select="/ns0:DATA_DS/ns0:invoice/ns0:issuer_int_number"/>
        </ns8:issuerIntNumber>
        <ns8:issuerColony>
          <xsl:value-of select="/ns0:DATA_DS/ns0:invoice/ns0:issuer_colony"/>
        </ns8:issuerColony>
        <ns8:issuerZipCode>
          <xsl:value-of select="/ns0:DATA_DS/ns0:invoice/ns0:issuer_zip_code"/>
        </ns8:issuerZipCode>
        <ns8:issuerMunicipality>
          <xsl:value-of select="/ns0:DATA_DS/ns0:invoice/ns0:issuer_municipality"/>
        </ns8:issuerMunicipality>
        <ns8:issuerState>
          <xsl:value-of select="/ns0:DATA_DS/ns0:invoice/ns0:issuer_state"/>
        </ns8:issuerState>
        <ns8:issuerPhone>
          <xsl:value-of select="/ns0:DATA_DS/ns0:invoice/ns0:issuer_phone"/>
        </ns8:issuerPhone>
        <ns8:issuerCountry>
          <xsl:value-of select="/ns0:DATA_DS/ns0:invoice/ns0:issuer_country"/>
        </ns8:issuerCountry>
        <ns8:invoiceDate>
          <xsl:value-of select="/ns0:DATA_DS/ns0:invoice/ns0:invoice_date"/>
        </ns8:invoiceDate>
        <ns8:documentType>
          <xsl:value-of select="/ns0:DATA_DS/ns0:invoice/ns0:document_type"/>
        </ns8:documentType>
        <ns8:additionalInformation>
          <xsl:value-of select="/ns0:DATA_DS/ns0:invoice/ns0:additional_information"/>
        </ns8:additionalInformation>
        <ns8:cancellationDate>
          <xsl:value-of select="/ns0:DATA_DS/ns0:invoice/ns0:cancellation_date"/>
        </ns8:cancellationDate>
        <ns8:totalWords>
          <xsl:value-of select="/ns0:DATA_DS/ns0:invoice/ns0:total_words"/>
        </ns8:totalWords>
        <xsl:for-each select="/ns0:DATA_DS/ns0:invoice/ns0:item">
          <ns8:invoiceItems>
            <ns8:description>
              <xsl:value-of select="ns0:description"/>
            </ns8:description>
            <ns8:productServiceKey>
              <xsl:value-of select="ns0:prod_serv_key"/>
            </ns8:productServiceKey>
            <ns8:quantity>
              <xsl:value-of select="ns0:quantity"/>
            </ns8:quantity>
            <ns8:discount>
              <xsl:value-of select="ns0:discount"/>
            </ns8:discount>
            <ns8:vatPercentage>
              <xsl:value-of select="ns0:vat_percentage"/>
            </ns8:vatPercentage>
            <ns8:unit>
              <xsl:value-of select="ns0:unit"/>
            </ns8:unit>
            <ns8:unitKey>
              <xsl:value-of select="ns0:unit_key"/>
            </ns8:unitKey>
            <ns8:unitPrice>
              <xsl:value-of select="ns0:unit_price"/>
            </ns8:unitPrice>
            <ns8:taxBase>
              <xsl:value-of select="ns0:tax_base"/>
            </ns8:taxBase>
            <ns8:tax>
              <xsl:value-of select="ns0:tax"/>
            </ns8:tax>
            <ns8:factorType>
              <xsl:value-of select="ns0:factor_type"/>
            </ns8:factorType>
            <ns8:rateFee>
              <xsl:value-of select="ns0:rate_fee"/>
            </ns8:rateFee>
            <ns8:stpsPercentage>
              <xsl:value-of select="ns0:stps_percentage"/>
            </ns8:stpsPercentage>
            <ns8:impPercentage>
              <xsl:value-of select="ns0:imp_percentage"/>
            </ns8:impPercentage>
            <ns8:retentionVatPercentage>
              <xsl:value-of select="ns0:retention_vat_percentage"/>
            </ns8:retentionVatPercentage>
            <ns8:retentionRatePercentage>
              <xsl:value-of select="ns0:retention_rt_percentage"/>
            </ns8:retentionRatePercentage>
            <ns8:amount>
              <xsl:value-of select="ns0:amount"/>
            </ns8:amount>
            <ns8:subtotal>
              <xsl:value-of select="ns0:subtotal"/>
            </ns8:subtotal>
            <xsl:choose>
              <xsl:when test="dvm:lookupValue ('DVMs/dvmInvoicesBiz.dvm', 'Code', 'calculoIntegracion', 'Value', '','Component','DigitalStamp')= 'true'">
                <ns8:vat>
                  <xsl:value-of select="round ((ns0:subtotal * ns0:vat_percentage div 100)*100 ) div 100"/>
                </ns8:vat>
              </xsl:when>
              <xsl:otherwise>
                <ns8:vat>
                  <xsl:value-of select="ns0:vat"/>
                </ns8:vat>
              </xsl:otherwise>
            </xsl:choose>
            <ns8:stps>
              <xsl:value-of select="ns0:stps"/>
            </ns8:stps>
            <ns8:imp>
              <xsl:value-of select="ns0:imp"/>
            </ns8:imp>
            <ns8:retentionVat>
              <xsl:value-of select="ns0:retention_vat"/>
            </ns8:retentionVat>
            <ns8:retentionRate>
              <xsl:value-of select="ns0:retention_rt"/>
            </ns8:retentionRate>
            <xsl:choose>
              <xsl:when test="dvm:lookupValue ('DVMs/dvmInvoicesBiz.dvm', 'Code', 'calculoIntegracion', 'Value', '','Component','DigitalStamp')= 'true'">
                <ns8:total>
                  <xsl:value-of select="(ns0:subtotal + (round ((ns0:subtotal * ns0:vat_percentage div 100 )*100 ) div 100)) - ns0:retention_vat"/>
                </ns8:total>
              </xsl:when>
              <xsl:otherwise>
                <ns8:total>
                  <xsl:value-of select="ns0:total"/>
                </ns8:total>
              </xsl:otherwise>
            </xsl:choose>
            <ns8:st>
              <xsl:value-of select="ns0:st"/>
            </ns8:st>
             <xsl:variable name="splitNodes">
              <xsl:call-template name="split">
                <xsl:with-param name="pText" select="ns0:propertyAccount"/>
              </xsl:call-template>
            </xsl:variable>
            <xsl:for-each select="oraxsl:node-set($splitNodes)/item">
              <ns8:propertyAccount>
                <xsl:value-of select=". "/>
              </ns8:propertyAccount>
            </xsl:for-each>
            <ns8:taxObject>
              <xsl:value-of select="ns0:taxObject"/>
            </ns8:taxObject>
            <ns8:addendumInterfaceApply>
              <xsl:value-of select="ns0:addendum_interface_apply"/>
            </ns8:addendumInterfaceApply>
            <ns8:addendumInterfaceType>
              <xsl:value-of select="ns0:addendum_interface_type"/>
            </ns8:addendumInterfaceType>
            <ns8:addendumInterfaceConcept>
              <xsl:value-of select="ns0:addendum_interface_concept"/>
            </ns8:addendumInterfaceConcept>
            <ns8:identificationNumber>
              <xsl:value-of select="ns0:identificationNumber"/>
            </ns8:identificationNumber>
          </ns8:invoiceItems>
        </xsl:for-each>
        <ns8:totalItems>
          <xsl:value-of select="count(/ns0:DATA_DS/ns0:invoice/ns0:item)"/>
        </ns8:totalItems>
        <ns8:localRetentionName>
          <xsl:value-of select="/ns0:DATA_DS/ns0:invoice/ns0:local_retention_name"/>
        </ns8:localRetentionName>
        <ns8:localRetentionPercentage>
          <xsl:value-of select="/ns0:DATA_DS/ns0:invoice/ns0:local_retention_percentage"/>
        </ns8:localRetentionPercentage>
        <ns8:localRetentionAmount>
          <xsl:value-of select="/ns0:DATA_DS/ns0:invoice/ns0:local_retention_amount"/>
        </ns8:localRetentionAmount>
        <xsl:choose>
          <xsl:when test="dvm:lookupValue ('DVMs/dvmInvoicesBiz.dvm', 'Code', 'calculoIntegracion', 'Value', '','Component','DigitalStamp')= 'true'">
            <ns8:totalVat>
              <xsl:value-of select="0"/>
            </ns8:totalVat>
          </xsl:when>
          <xsl:otherwise>
            <ns8:totalVat>
              <xsl:value-of select="/ns0:DATA_DS/ns0:invoice/ns0:total_vat"/>
            </ns8:totalVat>
          </xsl:otherwise>
        </xsl:choose>
        <ns8:totalStps>
          <xsl:value-of select="/ns0:DATA_DS/ns0:invoice/ns0:total_stps"/>
        </ns8:totalStps>
        <ns8:totalSt>
          <xsl:value-of select="/ns0:DATA_DS/ns0:invoice/ns0:total_st"/>
        </ns8:totalSt>
        <ns8:totalTip>
          <xsl:value-of select="/ns0:DATA_DS/ns0:invoice/ns0:total_tips"/>
        </ns8:totalTip>
        <ns8:retentionVat>
          <xsl:value-of select="/ns0:DATA_DS/ns0:invoice/ns0:retention_vat"/>
        </ns8:retentionVat>
        <ns8:retentionRate>
          <xsl:value-of select="/ns0:DATA_DS/ns0:invoice/ns0:retention_rt"/>
        </ns8:retentionRate>
        <ns8:totalTaxBase>
          <xsl:value-of select="/ns0:DATA_DS/ns0:invoice/ns0:subtotal"/>
        </ns8:totalTaxBase>
        <ns8:subtotal>
          <xsl:value-of select="/ns0:DATA_DS/ns0:invoice/ns0:subtotal"/>
        </ns8:subtotal>
        <xsl:choose>
          <xsl:when test="dvm:lookupValue ('DVMs/dvmInvoicesBiz.dvm', 'Code', 'calculoIntegracion', 'Value', '','Component','DigitalStamp')= 'true'">
            <ns8:total>
              <xsl:value-of select="0"/>
            </ns8:total>
          </xsl:when>
          <xsl:otherwise>
            <ns8:total>
              <xsl:value-of select="/ns0:DATA_DS/ns0:invoice/ns0:total"/>
            </ns8:total>
          </xsl:otherwise>
        </xsl:choose>
        <ns8:serie>
          <xsl:value-of select="/ns0:DATA_DS/ns0:invoice/ns0:serie"/>
        </ns8:serie>
        <ns8:branchId>
          <xsl:value-of select="/ns0:DATA_DS/ns0:invoice/ns0:branch_id"/>
        </ns8:branchId>
        <ns8:branchNumber>
          <xsl:value-of select="/ns0:DATA_DS/ns0:invoice/ns0:branch_number"/>
        </ns8:branchNumber>
        <ns8:branchName>
          <xsl:value-of select="/ns0:DATA_DS/ns0:invoice/ns0:branch_name"/>
        </ns8:branchName>
        <ns8:branchStreet>
          <xsl:value-of select="/ns0:DATA_DS/ns0:invoice/ns0:branch_street"/>
        </ns8:branchStreet>
        <ns8:branchExtNumber>
          <xsl:value-of select="/ns0:DATA_DS/ns0:invoice/ns0:branch_ext_number"/>
        </ns8:branchExtNumber>
        <ns8:branchIntNumber>
          <xsl:value-of select="/ns0:DATA_DS/ns0:invoice/ns0:branch_int_number"/>
        </ns8:branchIntNumber>
        <ns8:branchColony>
          <xsl:value-of select="/ns0:DATA_DS/ns0:invoice/ns0:branch_colony"/>
        </ns8:branchColony>
        <ns8:branchZipCode>
          <xsl:value-of select="/ns0:DATA_DS/ns0:invoice/ns0:branch_zip_code"/>
        </ns8:branchZipCode>
        <ns8:branchMunicipality>
          <xsl:value-of select="/ns0:DATA_DS/ns0:invoice/ns0:branch_municipality"/>
        </ns8:branchMunicipality>
        <ns8:branchState>
          <xsl:value-of select="/ns0:DATA_DS/ns0:invoice/ns0:branch_state"/>
        </ns8:branchState>
        <ns8:branchReference>
          <xsl:value-of select="/ns0:DATA_DS/ns0:invoice/ns0:branch_reference"/>
        </ns8:branchReference>
        <ns8:branchPhone>
          <xsl:value-of select="/ns0:DATA_DS/ns0:invoice/ns0:branch_phone"/>
        </ns8:branchPhone>
        <ns8:branchCountry>
          <xsl:value-of select="/ns0:DATA_DS/ns0:invoice/ns0:branch_country"/>
        </ns8:branchCountry>
        <ns8:branchSale/>
        <ns8:receiverName>
          <xsl:value-of select="/ns0:DATA_DS/ns0:invoice/ns0:receiver_name"/>
        </ns8:receiverName>
        <ns8:receiverTaxRegime>
          <xsl:value-of select="/ns0:DATA_DS/ns0:invoice/ns0:RECEIVER_TAX_REGIME"/>
        </ns8:receiverTaxRegime>
        <ns8:receiverEmail>
          <xsl:value-of select="/ns0:DATA_DS/ns0:invoice/ns0:receiver_email"/>
        </ns8:receiverEmail>
        <ns8:receiverRfc>
          <xsl:value-of select="/ns0:DATA_DS/ns0:invoice/ns0:receiver_rfc"/>
        </ns8:receiverRfc>
        <ns8:receiverPhone>
          <xsl:value-of select="/ns0:DATA_DS/ns0:invoice/ns0:receiver_phone"/>
        </ns8:receiverPhone>
        <ns8:receiverStreet>
          <xsl:value-of select="/ns0:DATA_DS/ns0:invoice/ns0:receiver_street"/>
        </ns8:receiverStreet>
        <ns8:receiverExtNumber>
          <xsl:value-of select="/ns0:DATA_DS/ns0:invoice/ns0:receiver_ext_number"/>
        </ns8:receiverExtNumber>
        <ns8:receiverIntNumber>
          <xsl:value-of select="/ns0:DATA_DS/ns0:invoice/ns0:receiver_int_number"/>
        </ns8:receiverIntNumber>
        <ns8:receiverColony>
          <xsl:value-of select="/ns0:DATA_DS/ns0:invoice/ns0:receiver_colony"/>
        </ns8:receiverColony>
        <ns8:receiverZipCode>
          <xsl:value-of select="/ns0:DATA_DS/ns0:invoice/ns0:receiver_zip_code"/>
        </ns8:receiverZipCode>
        <ns8:receiverMunicipality>
          <xsl:value-of select="/ns0:DATA_DS/ns0:invoice/ns0:receiver_municipality"/>
        </ns8:receiverMunicipality>
        <ns8:receiverState>
          <xsl:value-of select="/ns0:DATA_DS/ns0:invoice/ns0:receiver_state"/>
        </ns8:receiverState>
        <ns8:receiverCountry>
          <xsl:value-of select="/ns0:DATA_DS/ns0:invoice/ns0:receiver_country"/>
        </ns8:receiverCountry>
        <ns8:receiverPassport>
          <xsl:value-of select="/ns0:DATA_DS/ns0:invoice/ns0:receiver_passport"/>
        </ns8:receiverPassport>
        <ns8:receiverCfdiUse>
          <xsl:value-of select="/ns0:DATA_DS/ns0:invoice/ns0:receiver_cfdi_use"/>
        </ns8:receiverCfdiUse>
        <ns8:paymentMethod>
          <xsl:value-of select="/ns0:DATA_DS/ns0:invoice/ns0:payment_method"/>
        </ns8:paymentMethod>
        <ns8:currency>
          <xsl:value-of select="/ns0:DATA_DS/ns0:invoice/ns0:currency"/>
        </ns8:currency>
        <ns8:issuerTaxRegime>
          <xsl:value-of select="/ns0:DATA_DS/ns0:invoice/ns0:issuer_tax_regime"/>
        </ns8:issuerTaxRegime>
        <ns8:currencyExchangeRate>
          <xsl:value-of select="/ns0:DATA_DS/ns0:invoice/ns0:currency_exchange_rate"/>
        </ns8:currencyExchangeRate>
        <ns8:paymentMethodSelect>
          <xsl:value-of select="/ns0:DATA_DS/ns0:invoice/ns0:payment_method_select"/>
        </ns8:paymentMethodSelect>
        <ns8:addedPaymentMethods>
          <xsl:value-of select="/ns0:DATA_DS/ns0:invoice/ns0:added_payment_methods"/>
        </ns8:addedPaymentMethods>
        <ns8:paymentForm>
          <xsl:value-of select="/ns0:DATA_DS/ns0:invoice/ns0:payment_form"/>
        </ns8:paymentForm>
        <ns8:paymentCondition>
          <xsl:value-of select="/ns0:DATA_DS/ns0:invoice/ns0:payment_condition"/>
        </ns8:paymentCondition>
        <ns8:paymentStatus>
          <xsl:value-of select="/ns0:DATA_DS/ns0:invoice/ns0:payment_status"/>
        </ns8:paymentStatus>
        <ns8:paymentAccountNumber>
          <xsl:value-of select="/ns0:DATA_DS/ns0:invoice/ns0:payment_account_number"/>
        </ns8:paymentAccountNumber>
        <ns8:discount>
          <xsl:value-of select="/ns0:DATA_DS/ns0:invoice/ns0:discount"/>
        </ns8:discount>
        <ns8:comments>
          <xsl:value-of select="/ns0:DATA_DS/ns0:invoice/ns0:comments"/>
        </ns8:comments>
        <ns8:service>
          <xsl:value-of select="/ns0:DATA_DS/ns0:invoice/ns0:service"/>
        </ns8:service>
        <ns8:export>
          <xsl:value-of select="/ns0:DATA_DS/ns0:invoice/ns0:exportacion"/>
        </ns8:export>
          <xsl:choose>
          <xsl:when test="/ns0:DATA_DS/ns0:invoice/ns0:document_type = 'I'">
        <ns8:typeInvoice>
          <xsl:value-of select="dvm:lookupValue ('DVMs/dvmInvoicesBiz.dvm', 'Code', 'invoiceTypeFactura', 'Value', '','Component','DigitalStamp')"/>
        </ns8:typeInvoice>
        </xsl:when>
          <xsl:otherwise>
        <ns8:typeInvoice>
          <xsl:value-of select="dvm:lookupValue ('DVMs/dvmInvoicesBiz.dvm', 'Code', 'invoiceTypeNC', 'Value', '','Component','DigitalStamp')"/>
        </ns8:typeInvoice>
        </xsl:otherwise>
        </xsl:choose>

        <xsl:if test="string-length(/ns0:DATA_DS/ns0:invoice/ns0:relationship_type) >0 and string-length(/ns0:DATA_DS/ns0:invoice/ns0:related_cfdi) >0">
          <ns8:relatedCfdi>
            <ns8:relationshipType>
              <xsl:value-of select="/ns0:DATA_DS/ns0:invoice/ns0:relationship_type"/>
            </ns8:relationshipType>
            <xsl:variable name="splitNodes">
              <xsl:call-template name="split">
                <xsl:with-param name="pText" select="/ns0:DATA_DS/ns0:invoice/ns0:related_cfdi"/>
              </xsl:call-template>
            </xsl:variable>
            <xsl:for-each select="oraxsl:node-set($splitNodes)/item">
              <ns8:uuids>
                <xsl:value-of select=". "/>
              </ns8:uuids>
            </xsl:for-each>
          </ns8:relatedCfdi>
        </xsl:if>
        <ns8:originSystem>
          <xsl:value-of select="dvm:lookupValue ('DVMs/dvmInvoicesBiz.dvm', 'Code', 'originSystem', 'Value', '','Component','DigitalStamp')"/>
        </ns8:originSystem>
        <xsl:choose>
          <xsl:when test="/ns0:DATA_DS/ns0:invoice/ns0:document_type = 'I'">
          <ns8:documentTypeDescription>
          <xsl:value-of select="dvm:lookupValue ('DVMs/dvmInvoicesBiz.dvm', 'Code', 'documentTypeDescriptionFactura', 'Value', '','Component','DigitalStamp')"/>
        </ns8:documentTypeDescription>
        </xsl:when>
          <xsl:otherwise>
          <ns8:documentTypeDescription>
          <xsl:value-of select="dvm:lookupValue ('DVMs/dvmInvoicesBiz.dvm', 'Code', 'documentTypeDescriptionNC', 'Value', '','Component','DigitalStamp')"/>
        </ns8:documentTypeDescription>
        </xsl:otherwise>
        </xsl:choose>
      </ns8:invoice>
    </ns8:createTrxCFDIRq>
  </xsl:template>
			   <xsl:template  name="split">
  <xsl:param name="pText" />
   <xsl:if test="string-length($pText) >0">
    <item>
     <xsl:value-of select=
      "substring-before(concat($pText, ','), ',')"/>
    </item>
    <xsl:call-template name="split">
     <xsl:with-param name="pText" select=
     "substring-after($pText, ',')"/>
    </xsl:call-template>
   </xsl:if>
 </xsl:template>
</xsl:stylesheet>
