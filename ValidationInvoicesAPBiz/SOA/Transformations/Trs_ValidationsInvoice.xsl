<?xml version="1.0" encoding="UTF-8" ?>
<xsl:stylesheet version="1.0" xmlns:mhdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.mediator.service.common.functions.MediatorExtnFunction" xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20" xmlns:ns1="http://soa.estrellaroja.com.mx/Reports/XXER_AP_INVOICE_VALIDATION_AUTOMATICA" xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions" xmlns:socket="http://www.oracle.com/XSL/Transform/java/oracle.tip.adapter.socket.ProtocolTranslator" xmlns:ns0="http://soa.estrellaroja.com.mx/ValidationInvoicesAPBiz" xmlns:oracle-xsl-mapper="http://www.oracle.com/xsl/mapper/schemas" xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue" xmlns:oraxsl="http://www.oracle.com/XSL/Transform/java" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" exclude-result-prefixes=" xsd oracle-xsl-mapper xsi xsl ns1 ns0 mhdr oraext xp20 xref socket dvm oraxsl"
                xmlns:cmn="http://soa.estrellaroja.com.mx/EstrellaRojaCommons"
                xmlns:cfg="http://soa.estrellaroja.com.mx/ValidationInvoicesAPEnt">
   <oracle-xsl-mapper:schema>
      <!--SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY.-->
      <oracle-xsl-mapper:mapSources>
         <oracle-xsl-mapper:source type="XSD">
            <oracle-xsl-mapper:schema location="oramds:/apps/SOA/ValidationInvoicesAPBiz/ValidationInvoicesAPBiz.xsd"/>
            <oracle-xsl-mapper:rootElement name="ValidateInvoicesAPRq" namespace="http://soa.estrellaroja.com.mx/ValidationInvoicesAPBiz"/>
         </oracle-xsl-mapper:source>
         <oracle-xsl-mapper:source type="XSD">
            <oracle-xsl-mapper:schema location="oramds:/apps/SOA/ValidationInvoicesAPBiz/ValidationInvoicesAPBiz.xsd"/>
            <oracle-xsl-mapper:rootElement name="DATA_DS" namespace="http://soa.estrellaroja.com.mx/Reports/XXER_AP_INVOICE_VALIDATION_AUTOMATICA"/>
            <oracle-xsl-mapper:param name="v_invoice"/>
         </oracle-xsl-mapper:source>
         <oracle-xsl-mapper:source type="XSD">
            <oracle-xsl-mapper:schema location="oramds:/apps/SOA/ValidationInvoicesAPBiz/ValidationInvoicesAPBiz.xsd"/>
            <oracle-xsl-mapper:rootElement name="InvoiceXML" namespace="http://soa.estrellaroja.com.mx/ValidationInvoicesAPBiz"/>
            <oracle-xsl-mapper:param name="v_invoiceXML"/>
         </oracle-xsl-mapper:source>
      </oracle-xsl-mapper:mapSources>
      <oracle-xsl-mapper:mapTargets>
         <oracle-xsl-mapper:target type="XSD">
            <oracle-xsl-mapper:schema location="oramds:/apps/SOA/ValidationInvoicesAPBiz/ValidationInvoicesAPBiz.xsd"/>
            <oracle-xsl-mapper:rootElement name="ValidateInvoicesAPRq" namespace="http://soa.estrellaroja.com.mx/ValidationInvoicesAPBiz"/>
         </oracle-xsl-mapper:target>
      </oracle-xsl-mapper:mapTargets>
      <!--GENERATED BY ORACLE XSL MAPPER 12.2.1.4.0(XSLT Build 190828.0353.3300) AT [TUE OCT 18 13:06:50 CDT 2022].-->
   </oracle-xsl-mapper:schema>
   <!--User Editing allowed BELOW this line - DO NOT DELETE THIS LINE-->
   <xsl:param name="v_invoice"/>
   <xsl:param name="v_invoiceXML"/>
   <xsl:template match="/">
      <ns0:ValidateInvoicesAPRq>
         <ns0:Config>
            <cfg:ConfiguracionUsuario >
               <xsl:value-of select="/ns0:ValidateInvoicesAPRq/ns0:Config/cfg:ConfiguracionUsuario"/>
            </cfg:ConfiguracionUsuario>
            <cfg:Ambiente >
               <xsl:value-of select="/ns0:ValidateInvoicesAPRq/ns0:Config/cfg:Ambiente"/>
            </cfg:Ambiente>
            <cfg:CatalogoRetenciones>
               <xsl:for-each select="/ns0:ValidateInvoicesAPRq/ns0:Config/cfg:CatalogoRetenciones/cfg:Retencion">
                  <xsl:if test="contains (cfg:VersionCFDI, $v_invoiceXML/ns0:InvoiceXML/ns0:Version ) and contains (cfg:TipoDocumento, $v_invoice/ns1:DATA_DS/ns1:G_INVOICES[1.0]/ns1:INVOICE_TYPE )">
                     <cfg:Retencion>
                        <cfg:VersionCFDI>
                           <xsl:value-of select="cfg:VersionCFDI"/>
                        </cfg:VersionCFDI>
                        <cfg:TipoDocumento >
                           <xsl:value-of select="cfg:TipoDocumento"/>
                        </cfg:TipoDocumento>
                        <cfg:MensajeNotificacion >
                           <xsl:value-of select="cfg:MensajeNotificacion"/>
                        </cfg:MensajeNotificacion>
                        <cfg:Accion >
                           <xsl:value-of select="cfg:Accion"/>
                        </cfg:Accion>
                        <cfg:RegimenFiscal >
                           <xsl:value-of select="cfg:RegimenFiscal"/>
                        </cfg:RegimenFiscal>
                        <cfg:Cuenta >
                           <xsl:value-of select="cfg:Cuenta"/>
                        </cfg:Cuenta>
                        <cfg:IVA >
                           <xsl:value-of select="cfg:IVA"/>
                        </cfg:IVA>
                        <cfg:ISR >
                           <xsl:value-of select="cfg:ISR"/>
                        </cfg:ISR>
                        <cfg:TipoPersona>
                           <xsl:value-of select="cfg:TipoPersona"/>
                        </cfg:TipoPersona>
                     </cfg:Retencion>
                  </xsl:if>
               </xsl:for-each>
            </cfg:CatalogoRetenciones>
            <cfg:CatalogoCondicionesPago>
               <xsl:for-each select="/ns0:ValidateInvoicesAPRq/ns0:Config/cfg:CatalogoCondicionesPago/cfg:CondicionPago">
                  <xsl:if test="contains (cfg:VersionCFDI, $v_invoiceXML/ns0:InvoiceXML/ns0:Version ) and contains (cfg:TipoDocumento, $v_invoice/ns1:DATA_DS/ns1:G_INVOICES/ns1:INVOICE_TYPE )">
                     <cfg:CondicionPago>
                                             <cfg:VersionCFDI>
                           <xsl:value-of select="cfg:VersionCFDI"/>
                        </cfg:VersionCFDI>
                        <cfg:TipoDocumento >
                           <xsl:value-of select="cfg:TipoDocumento"/>
                        </cfg:TipoDocumento>
                        <cfg:MensajeNotificacion >
                           <xsl:value-of select="cfg:MensajeNotificacion"/>
                        </cfg:MensajeNotificacion>
                        <cfg:Accion >
                           <xsl:value-of select="cfg:Accion"/>
                        </cfg:Accion>
                        <cfg:CondicionPago >
                           <xsl:value-of select="cfg:CondicionPago"/>
                        </cfg:CondicionPago>
                        <cfg:MetodoPago >
                           <xsl:value-of select="cfg:MetodoPago"/>
                        </cfg:MetodoPago>
                     </cfg:CondicionPago>
                  </xsl:if>
               </xsl:for-each>
            </cfg:CatalogoCondicionesPago>
            <cfg:CatalogoFormasPago>
               <xsl:for-each select="/ns0:ValidateInvoicesAPRq/ns0:Config/cfg:CatalogoFormasPago/cfg:FormaPago">
                  <xsl:if test="contains (cfg:VersionCFDI, $v_invoiceXML/ns0:InvoiceXML/ns0:Version ) and contains (cfg:TipoDocumento, $v_invoice/ns1:DATA_DS/ns1:G_INVOICES[1.0]/ns1:INVOICE_TYPE )">
                     <cfg:FormaPago>
                                             <cfg:VersionCFDI>
                           <xsl:value-of select="cfg:VersionCFDI"/>
                        </cfg:VersionCFDI>
                        <cfg:TipoDocumento >
                           <xsl:value-of select="cfg:TipoDocumento"/>
                        </cfg:TipoDocumento>
                        <cfg:MensajeNotificacion >
                           <xsl:value-of select="cfg:MensajeNotificacion"/>
                        </cfg:MensajeNotificacion>
                        <cfg:Accion >
                           <xsl:value-of select="cfg:Accion"/>
                        </cfg:Accion>
                        <cfg:FormaPago >
                           <xsl:value-of select="cfg:FormaPago"/>
                        </cfg:FormaPago>
                        <cfg:MetodoPago >
                           <xsl:value-of select="cfg:MetodoPago"/>
                        </cfg:MetodoPago>
                     </cfg:FormaPago>
                  </xsl:if>
               </xsl:for-each>
            </cfg:CatalogoFormasPago>
            <cfg:CatalogoValidaciones>
               <xsl:for-each select="/ns0:ValidateInvoicesAPRq/ns0:Config/cfg:CatalogoValidaciones/cfg:Validacion">
                  <xsl:if test="contains (cfg:VersionCFDI, $v_invoiceXML/ns0:InvoiceXML/ns0:Version ) and contains (cfg:TipoDocumento, $v_invoice/ns1:DATA_DS/ns1:G_INVOICES[1]/ns1:INVOICE_TYPE )">
                     <cfg:Validacion>
                        <cfg:Codigo>
                           <xsl:value-of select="cfg:Codigo"/>
                        </cfg:Codigo>
                        <cfg:Orden>
                           <xsl:value-of select="cfg:Orden"/>
                        </cfg:Orden>
                      <cfg:VersionCFDI>
                           <xsl:value-of select="cfg:VersionCFDI"/>
                        </cfg:VersionCFDI>
                        <cfg:TipoDocumento>
                           <xsl:value-of select="cfg:TipoDocumento"/>
                        </cfg:TipoDocumento>
                        <cfg:MensajeNotificacion>
                           <xsl:value-of select="cfg:MensajeNotificacion"/>
                        </cfg:MensajeNotificacion>
                        <cfg:Accion>
                           <xsl:value-of select="cfg:Accion"/>
                        </cfg:Accion>
                        <xsl:if test="string-length (cfg:Parametro1 )>0">
                           <cfg:Parametro1>
                              <xsl:value-of select="cfg:Parametro1"/>
                           </cfg:Parametro1>
                        </xsl:if>
                        <xsl:if test="string-length (cfg:Parametro2 )>0">
                        <cfg:Parametro2>
                           <xsl:value-of select="cfg:Parametro2"/>
                        </cfg:Parametro2>
                        </xsl:if>
                        <xsl:if test="string-length (cfg:Parametro3 )>0">
                        <cfg:Parametro3>
                           <xsl:value-of select="cfg:Parametro3"/>
                        </cfg:Parametro3>
                        </xsl:if>
                        <xsl:if test="string-length (cfg:Parametro4 )>0">
                        <cfg:Parametro4>
                           <xsl:value-of select="cfg:Parametro4"/>
                        </cfg:Parametro4>
                        </xsl:if>
                        <xsl:if test="string-length (cfg:Parametro5 )>0">
                        <cfg:Parametro5>
                           <xsl:value-of select="cfg:Parametro5"/>
                        </cfg:Parametro5>
                        </xsl:if>
                     </cfg:Validacion>
                  </xsl:if>
               </xsl:for-each>
            </cfg:CatalogoValidaciones>
            <cfg:CatalogoConfiguraciones>
               <xsl:for-each select="/ns0:ValidateInvoicesAPRq/ns0:Config/cfg:CatalogoConfiguraciones/cfg:Configuracion">
                  <cfg:Configuracion>
                     <cfg:Codigo>
                        <xsl:value-of select="cfg:Codigo"/>
                     </cfg:Codigo>
                    <xsl:if test="string-length (cfg:Parametro1 )>0">
                           <cfg:Parametro1>
                              <xsl:value-of select="cfg:Parametro1"/>
                           </cfg:Parametro1>
                        </xsl:if>
                        <xsl:if test="string-length (cfg:Parametro2 )>0">
                        <cfg:Parametro2>
                           <xsl:value-of select="cfg:Parametro2"/>
                        </cfg:Parametro2>
                        </xsl:if>
                        <xsl:if test="string-length (cfg:Parametro3 )>0">
                        <cfg:Parametro3>
                           <xsl:value-of select="cfg:Parametro3"/>
                        </cfg:Parametro3>
                        </xsl:if>
                        <xsl:if test="string-length (cfg:Parametro4 )>0">
                        <cfg:Parametro4>
                           <xsl:value-of select="cfg:Parametro4"/>
                        </cfg:Parametro4>
                        </xsl:if>
                        <xsl:if test="string-length (cfg:Parametro5 )>0">
                        <cfg:Parametro5>
                           <xsl:value-of select="cfg:Parametro5"/>
                        </cfg:Parametro5>
                        </xsl:if>
                  </cfg:Configuracion>
               </xsl:for-each>
            </cfg:CatalogoConfiguraciones>
         </ns0:Config>
      </ns0:ValidateInvoicesAPRq>
   </xsl:template>
</xsl:stylesheet>
